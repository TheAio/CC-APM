printError("APM has been depricated in favor of APM2, but some packages are not planned to be moved!")
printError("APM will be avaible for a little while longer to allow users to upgrade or download packages not in APM2")
print("To upgrade simply run:")
textutils.slowPrint("wget https://raw.githubusercontent.com/TheAio/CC-APM/main/APM2")
print("The script will continue in 3 seconds")
sleep(3)
args = {...}
PackW =
{
"This software is depricated and may destroy some files",
nil,
"REACTOR IS INSTALLED AS A STARTUP FILE",
nil,
nil,
nil,
nil,
nil,
nil,
nil,
"POST INSTALL PLEASE INSTALL ONCE MORE",
"YOU ARE ABOUT TO INSTALL PACKMAN IT IS VERY LARGE",
nil,
nil,
nil,
nil,
"THIS PROGRAM REQUIERS A SPEAKER",
"THIS PROGRAM REQUIERS AN ADVANCED COMPUTER!",
"THIS PROGRAM INTERFACES WITH WEBSOCETS",
"THIS PROGRAM IS IN EARLY ALPHA",
"THIS PROGRAM IS IN EARLY ALPHA",
nil,
nil,
nil,
nil,
"make sure to rename this program to 'startup'",
nil,
nil,
nil
}
PackN =
{
{"AIOS","Aiosos","Aio's os"},
{"ASSAV","ASS-AV","Aios secure shell - antivirus","Aios secure shell"},
{"REACTOR","CCreactor controller v1.5","CCreactor","ComputerCraft reactor controller V1.5","CCreactor controller"},
{"ARE","Aios Remote Explorer"},
{"ARS","Aios Remote server"},
{"FM2","File Manager 2"},
{"AFETCH","AioFetch"},
{"FTP","File Transfer Protocall"},
{"ANO","Aio Text Editor"},
{"RemoteSuite","RS","Remote Suite"},
{"cowsay"},
{"packman","packmanager","packageman","packagemanager","package manager"},
{"harbor","packman-harbor","harbour","packman-harbour"},
{"harbor-extras","harbor extra","harbour-extras","harbour extra","harborE","harbourE"},
{"palCollection","palleteCollection","pallateCollection","colors collection","colours collection"},
{"palPal","pallete pal","pellete pal"},
{"SimplePiano","Piano"},
{"ScrnSavr","Screen Saver","ScreenSaver"},
{"SkyNet","IRC","Internet Relay Chat"},
{"ccLiquidReactor","computercraft liquid reactor"},
{"ccTurbineReactor","computercraft turbine reactor"},
{"CCH","computercraftshell","remote shell"},
{"ccfr","cc-fr","CC-FileReader","ComputerCraft-FileReader"},
{"DU","DiskUtils"},
{"TextSender","TextTx","Text sender"},
{"TextRequester","TextRx","Text requester"},
{"CCCE","CCCE.lua","ComputerCraftCheatEngine","ComputerCraft-CheatEngine","CC-CheatEngine"},
{"loadingscreen","loadscrn","loading-screen","loadingscrn"},
{"ccdoom","doom","pine3d-doom"}
}
PackR =
{
nil,
nil,
nil,
nil,
nil,
"APM findInstall ANO",
nil,
nil, --please see http://www.computercraft.info/forums2/index.php?/topic/22471-file-transfer-protocol-ftp/
nil,
"APM findInstall FTP",
"APM findInstall packman", --please see http://www.computercraft.info/forums2/index.php?/topic/27992-cowsay-for-computercraft/
nil, --please see http://www.computercraft.info/forums2/index.php?/topic/22268-packman-a-package-management-tool/
nil, --please see https://forums.computercraft.cc/index.php?topic=91.0
nil, --please see https://forums.computercraft.cc/index.php?topic=91.0
"APM findInstall palpal", --please see https://forums.computercraft.cc/index.php?topic=61.0
nil, --please see https://forums.computercraft.cc/index.php?topic=60.0
nil, --please see https://forums.computercraft.cc/index.php?topic=383.0
nil,
nil, --please see https://forums.computercraft.cc/index.php?topic=71.0
nil, --Please see file for creddits
nil,  --Please see file for creddits
"APM findInstall SkyNet",
nil,
nil,
nil,
nil,
nil,
nil,
nil
}
PackI =
{
"pastebin run mgg84eJ7",
"pastebin get 6gadUHeS ASS",
"pastebin get sczNdpjm startup",
"pastebin get e8HMLxPJ ARE",
"pastebin get Q9W6KJ2X ARS",
"pastebin get bX2Rb0b2 FM2",
"pastebin get tEg6UR0w AFETCH",
"pastebin get bihLMhkX FTP",
"pastebin get bkKTcs8H ANO",
"pastebin get VcKspez7 RemoteSuite",
"packman install cowsay",
"pastebin run 4zyreNZy",
"pastebin run ivRuuLSH",
"pastebin run ivRuuLSH extras",
"wget https://raw.githubusercontent.com/Wendelstein7/palCollection-CC/master/palCollection.lua palCollection.lua",
"wget https://raw.githubusercontent.com/Wendelstein7/palPal-CC/master/palPal.lua palPal.lua",
"pastebin get ZdSjei8j piano",
"pastebin get Bq5ERu8F ScrnSavr",
"wget https://raw.githubusercontent.com/osmarks/skynet/master/client.lua skynet",
"pastebin get SPPM2HWQ ccLiquidReactor",
"pastebin get HjAaxXfR ccTurbineReactor",
"pastebin get bzGHsYhk CCH",
"wget https://raw.githubusercontent.com/TheAio/CC-ALLUDE/main/CC-FileReader ccfr",
"wget https://raw.githubusercontent.com/TheAio/CC-ALLUDE/main/DiskUtils DU",
"wget https://raw.githubusercontent.com/TheAio/CC-ALLUDE/main/TextToInternet.lua TextSender",
"wget https://raw.githubusercontent.com/TheAio/CC-ALLUDE/main/InternetTextToMonitor.lua startup",
"wget https://raw.githubusercontent.com/TheAio/CC-Tools/main/CCCE/CCCE.lua CCCE.lua",
"wget https://raw.githubusercontent.com/TheAio/CatAiOs/main/src/LoadingScreen.lua LoadingScreen",
"pastebin get 6BcdRV75 DoomInstaller"
}
if #args < 1 then
    print("USE")
    print("APM install <id> {flags}")
    print("APM findInstall <name>")
    print("APM search <name>")
    print("APM update")
    print("APM list {flags}")
    print("APM mirror <id>")
       print("install flags are")
    print("-y to autoinstall")
    print("list flags are")
    print("-i for the IDs")
end
function install(args)
    --FOR SECURITY REASONS THE FOLLOWING IS NEEDED DO NOT REMOVE IT!
    sleep(math.random(0.5,1))
    if tonumber(args[2]) < #PackN+1 then
        i = tonumber(args[2])
        if PackW[i] == nil then
                 else
            print(PackW[i])
            if args[3] == "-y" then
                   print("auto granting!")
                        else
                print("Enter Y/n")
                   if string.upper(read()) == "Y" then
                else
                    print("Aborted install")
                    return false
                end
            end
        end
        shell.run(PackI[i])
        if fs.exists(PackR[i]) or fs.exists(PackR[i]..".lua") then
        else
            if args[3] == "-y" then
                shell.run(PackR[i],"-y")
            else
                shell.run(PackR[i])
            end
        end
    else
end
end
function search(name)
    if args[1] == "search" then
        print("The following matches was found:")
    end
    Found = {}
    for i=1,#PackN do
        for j=1,#PackN[i] do
            if string.upper(PackN[i][j]) == string.upper(name) then
                Found[#Found+1] = i
                if args[1] == "API" then
                    if #Found > 1 then
                        return "Found multiple"
                    else
                        return i
                    end
                elseif args[1] == "search" then
                    print(name,"or",PackN[i][1],"has id",i)
                    break
                elseif args[1] == "findInstall" then
                    if #Found > 1 then
                        print("Found",#Found,"packages with the same name")
                        print("Please select the correctversion from",Found[1],"to",Found[#Found])
                        while true do
                            selection = tonumber(read())
                            if selection == nil then
                            elseif selection > Found[#Found] or selection < Found[1] then
                            else
                                args[2] = selection
                                break
                            end
                        end
                    elseif #Found == 0 then
                        return 0
                    else
                        args[2] = i
                    end
                    return args
                end
            end
        end
    end
end
if args[1] == "API" then
    if #args < 2 then
        return false
    else
        if args[2] == "Help" then
            return "API COMMANDS: 'Help', 'SRCH <name>', 'getLen', 'getName <id>'"
        elseif args[2] == "SRCH" then
            if #args < 3 then
                return false
            else
                return search(args[3])
            end
        elseif args[2] == "getLen" then
            return #PackI
        elseif args[2] == "getName" then
            if #args < 3 then
                return false
            else
                return PackN[args[3]][1]
            end
        else
            return "INVALID COMMAND USE 'Help' for avaible api commands"
        end
    end
elseif args[1] == "install" then
    if tonumber(args[2]) == nil then
        print("The argument",args[2],"does not work with",args[1],"perhaps you ment to run findInstall instead?")
    else
        install(args)
    end
elseif args[1] == "search" then
    if tonumber(args[1]) == nil then
        search(args[2])
    else
        print("The argument",args[2],"does not work with",args[1],"perhaps you ment to run mirror instead?")
    end
elseif args[1] == "findInstall" then
    if tonumber(args[1]) == nil then
        install(search(args[2]))
    else
        print("The argument",args[2],"does not work with",args[1],"perhaps you ment to run install instead?")
    end
elseif args[1] == "list" then
    for i=1,#PackN do
        sleep(1)
        print(PackN[i][1])
        if #args > 1 and args[2] == "-i" then
            print("it has the ID",i)
        end
    end
elseif args[1] == "update" then
    if fs.exists("APMold") then
        print("It is not safe to update at the moment")
        return false
    end
    shell.run("mv APM APMold")
    shell.run("wget https://raw.githubusercontent.com/TheAio/CC-APM/main/APM APM")
    if fs.exists("APM") then
        shell.run("rm APMold")
    else
        print("Failed to update")
        shell.run("mv APMold APM")
    end
elseif args[1] == "mirror" and #args > 1 then
    if tonumber(args[2]) == nil then
        print("The argument",args[2],"does not work with",args[1],"perhaps you ment to run search instead?")
    else
        i = tonumber(args[2])
        if i < #PackN+1 then
            print(PackN[i][1])
            print("can be found useing")
            print(PackI[i])
            if PackR[i] == nil then
            else
                print("after running")
                print(PackR[i])
            end
        end
    end
end
